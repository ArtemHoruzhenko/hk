name: Merge build artifacts
inputs:
  exclude-folders:
    description: 'Comma-separated list of folders to exclude.'
    required: false
    default: 'web,web-mini,redisstack,docker'

env:
  BUILD_NAME: 'builds'

outputs:
  build-name:
    description: Build name
    value: ${{ env.BUILD_NAME }}

runs:
  using: 'composite'
  steps:
  - name: Merge artifacts by pattern
    id: merge-artifacts
    uses: actions/upload-artifact/merge@v4
    with:
      name: 'all-builds'
      pattern: '*-builds'
      path: release
      delete-merged: true

  - name: List Release Directory
    shell: bash
    run: ls -R ./release

  - name: Process Release Folder
    shell: bash
    run: |
      # Read the exclude folders input into an array
      IFS=',' read -ra exclude <<< '${{ inputs.exclude-folders }}'

      # Iterate through first-level directories in ./release
      for dir in ./release/*/; do
        dir_name=$(basename "$dir")

        # Check if the directory is not in the exclude list
        if [[ ! " ${exclude[@]} " =~ " ${dir_name} " ]]; then
          echo "Processing directory: $dir_name"

          # Move all files from the subdirectory to the release directory
          mv "$dir"* ./release/

          # Remove the now-empty subdirectory
          rmdir "$dir"
        else
          echo "Excluding directory: $dir_name"
        fi
      done

    ls -R ./release

  - uses: actions/upload-artifact@v4
    id: artifacts
    name: Upload builds
    with:
      if-no-files-found: warn
      name: ${{ env.BUILD_NAME }}
      path: |
        ./release

  - name: Delete merged artifact
    uses: actions/github-script@v7
    with:
      script: |
        github.rest.actions.deleteArtifact({
          owner: context.repo.owner,
          repo: context.repo.repo,
          artifact_id: ${{ steps.merge-artifacts.outputs.artifact-id }}
        });

