name: Tests

on:
  push:
    branches:
      - 'fe/**'
      - 'be/**'
      - 'e2e/**'
    # branches-ignore:
    #   - main

  workflow_dispatch:
    inputs:
      all_tests:
        description: Run all tests (FE, BE, IT, E2E)
        type: boolean
        required: false
        default: false

      redis_client:
        description: Library to use for redis connection
        default: 'ioredis'
        type: choice
        options:
          - ioredis
          - node-redis

  workflow_call:
    inputs:
      all_tests:
        description: Run all tests (FE, BE, IT, E2E)
        type: boolean
        required: false
        default: false

jobs:
  changes:
    runs-on: ubuntu-latest
    outputs:
      frontend: ${{ steps.filter.outputs.frontend }}
      backend: ${{ steps.filter.outputs.backend }}
      desktop: ${{ steps.filter.outputs.desktop }}
      e2e: ${{ steps.filter.outputs.e2e }}
    steps:
    - uses: actions/checkout@v4
    - uses: dorny/paths-filter@v3.0.2
      id: filter
      with:
        base: ${{ github.ref }}
        filters: |
          frontend:
            - 'redisinsight/ui/**'
          backend:
            - 'redisinsight/api/**'
          desktop:
            - 'redisinsight/desktop/**'
          e2e:
            - 'tests/e2e/**'

  frontend-tests:
    # TODO: concurrency
    # concurrency: build
    needs: changes
    if: needs.changes.outputs.frontend == 'true' || inputs.all_tests || startsWith(github.ref_name, 'fe/')
    uses: ./.github/workflows/tests-frontend.yml
    secrets: inherit

  backend-tests:
    # TODO: concurrency
    # concurrency: build
    needs: changes
    if: needs.changes.outputs.backend == 'true' || inputs.all_tests || startsWith(github.ref_name, 'be/')
    uses: ./.github/workflows/tests-backend.yml
    secrets: inherit

  integration-tests:
    # concurrency: build
    # TODO: concurrency
    # needs: changes
    # if: needs.changes.outputs.backend == 'true' || inputs.all_tests || startsWith(github.ref_name, 'be/')
    uses: ./.github/workflows/tests-integration.yml
    secrets: inherit
    with:
      short_rte_list: ${{ !inputs.all_tests }}
      redis_client: ${{ inputs.redis_client }}

  # E2E Approve
  e2e-approve:
    runs-on: ubuntu-latest
    needs: changes
    timeout-minutes: 60
    if: inputs.all_tests || startsWith(github.ref_name, 'e2e/')
    environment: ${{ startsWith(github.ref_name, 'e2e/') && 'e2e-approve' || 'staging' }}
    name: Approve E2E tests
    steps:
      - uses: actions/checkout@v4

  # E2E Docker
  build-docker:
    uses: ./.github/workflows/pipeline-build-docker.yml
    needs: e2e-approve
    secrets: inherit
    with:
      only_docker: true

  e2e-docker-tests:
    needs: build-docker
    uses: ./.github/workflows/tests-e2e-docker.yml
    secrets: inherit


  # E2E AppImage
  build-appimage:
    uses: ./.github/workflows/pipeline-build-linux.yml
    needs: e2e-approve
    secrets: inherit
    with:
      target: linux:appimage:x64

  e2e-appimage-tests:
    # concurrency: build
    needs: build-appimage
    uses: ./.github/workflows/tests-e2e-appimage.yml
    secrets: inherit
